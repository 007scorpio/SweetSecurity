input { 
  #stdin { } 
  file {
    path => "/opt/nsm/bro/logs/current/*.log"   
  }
  file {
    path => "/opt/SweetSecurity/*.log"
  }
}

filter {
  if ([message] =~ /^#/) {
    drop{}
  }
  if [path] == "/opt/nsm/bro/logs/current/capture_loss.log" {
    grok{
      patterns_dir => "/etc/logstash/custom_patterns"
      match => {
        message => "%{captureLossLog}"
      }
    }
  }
  else if [path] == "/opt/nsm/bro/logs/current/communication.log" {
    grok{
      patterns_dir => "/etc/logstash/custom_patterns"
      match => {
        message => "%{communicationLog}"
      }
    }
  }
  else if [path] == "/opt/nsm/bro/logs/current/conn.log" {
    grok{
      patterns_dir => "/etc/logstash/custom_patterns"
      match => {
        message => "%{connLog}"
      }
    }
  }
  else if [path] == "/opt/nsm/bro/logs/current/dhcp.log" {
    grok{
      patterns_dir => "/etc/logstash/custom_patterns"
      match => {
        message => "%{dhcpLog}"
      }
    }
  }
  else if [path] == "/opt/nsm/bro/logs/current/dns.log" {
    grok{
      patterns_dir => "/etc/logstash/custom_patterns"
      match => {
        message => "%{dnsLog}"
      }
    }
  }
  else if [path] == "/opt/nsm/bro/logs/current/dpd.log" {
    grok{
      patterns_dir => "/etc/logstash/custom_patterns"
      match => {
        message => "%{dpdLog}"
      }
    }
  }
  else if [path] == "/opt/nsm/bro/logs/current/files.log" {
    grok{
      patterns_dir => "/etc/logstash/custom_patterns"
      match => {
        message => "%{filesLog}"
      }
    }
  }
  else if [path] == "/opt/nsm/bro/logs/current/ftp.log" {
    grok{
      patterns_dir => "/etc/logstash/custom_patterns"
      match => {
        message => "%{ftpLog}"
      }
    }
  }
  else if [path] == "/opt/nsm/bro/logs/current/http.log" {
    grok{
      patterns_dir => "/etc/logstash/custom_patterns"
      match => {
        message => "%{httpLog}"
      }
    }
  }
  else if [path] == "/opt/nsm/bro/logs/current/intel.log" {
    grok{
      patterns_dir => "/etc/logstash/custom_patterns"
      match => {
        message => "%{intelLog}"
      }
    }
  }
  else if [path] == "/opt/nsm/bro/logs/current/known_services.log" {
    grok{
      patterns_dir => "/etc/logstash/custom_patterns"
      match => {
        message => "%{knownServicesLog}"
      }
    }
  }
  else if [path] == "/opt/nsm/bro/logs/current/notice.log" {
    grok{
      patterns_dir => "/etc/logstash/custom_patterns"
      match => {
        message => "%{noticeLog}"
      }
    }
  }
  else if [path] == "/opt/nsm/bro/logs/current/packet_filter.log" {
    grok{
      patterns_dir => "/etc/logstash/custom_patterns"
      match => {
        message => "%{packetFilterLog}"
      }
    }
  }
  else if [path] == "/opt/nsm/bro/logs/current/pe.log" {
    grok{
      patterns_dir => "/etc/logstash/custom_patterns"
      match => {
        message => "%{peLog}"
      }
    }
  }
  else if [path] == "/opt/nsm/bro/logs/current/reporter.log" {
    grok{
      patterns_dir => "/etc/logstash/custom_patterns"
      match => {
        message => "%{reporterLog}"
      }
    }
  }
  else if [path] == "/opt/nsm/bro/logs/current/signatures.log" {
    grok{
      patterns_dir => "/etc/logstash/custom_patterns"
      match => {
        message => "%{signaturesLog}"
      }
    }
  }
  else if [path] == "/opt/nsm/bro/logs/current/smtp.log" {
    grok{
      patterns_dir => "/etc/logstash/custom_patterns"
      match => {
        message => "%{smtpLog}"
      }
    }
  }
  else if [path] == "/opt/nsm/bro/logs/current/software.log" {
    grok{
      patterns_dir => "/etc/logstash/custom_patterns"
      match => {
        message => "%{softwareLog}"
      }
    }
  }
  else if [path] == "/opt/nsm/bro/logs/current/ssh.log" {
    grok{
      patterns_dir => "/etc/logstash/custom_patterns"
      match => {
        message => "%{sshLog}"
      }
    }
  }
  else if [path] == "/opt/nsm/bro/logs/current/ssl.log" {
    grok{
      patterns_dir => "/etc/logstash/custom_patterns"
      match => {
        message => "%{sslLog}"
      }
    }
  }
  else if [path] == "/opt/nsm/bro/logs/current/stats.log" {
    grok{
      patterns_dir => "/etc/logstash/custom_patterns"
      match => {
        message => "%{statsLog}"
      }
    }
  }
  else if [path] == "/opt/nsm/bro/logs/current/tunnel.log" {
    grok{
      patterns_dir => "/etc/logstash/custom_patterns"
      match => {
        message => "%{tunnelLog}"
      }
    }
  }
  else if [path] == "/opt/nsm/bro/logs/current/weird.log" {
    grok{
      patterns_dir => "/etc/logstash/custom_patterns"
      match => {
        message => "%{weirdLog}"
      }
    }
  }
  else if [path] == "/opt/nsm/bro/logs/current/x509.log" {
    grok{
      patterns_dir => "/etc/logstash/custom_patterns"
      match => {
        message => "%{x509Log}"
      }
    }
  }
  
  if [path] == "/opt/SweetSecurity/sweetSecurity.log"{
    if [message] =~ /^(\d+\-\d\d\-\d\d\s\d\d\:\d\d\:\d\d\,\d+\:\sNew\sdevice\sdiscovered\:\shostname=([^,\s]+),\sip=([^,\s]+),\s([^,\s]+),\svendor=(.*))/ {
      grok{
        patterns_dir => "/etc/logstash/custom_patterns"
        match => {
          message => "%{ssNewDeviceLog}"
        }
      }
    }
    else if [message] =~ /^(\d+\-\d\d\-\d\d\s\d\d\:\d\d\:\d\d\,\d+\:\sUpdate\shostname\sof\sdevice\s([^\s]+)\sfrom\s([^\s]+)\sto\s(.*))/ {
      grok{
        patterns_dir => "/etc/logstash/custom_patterns"
        match => {
          message => "%{ssUpdateHostnameLog}"
        }
      }
    }
    else if [message] =~ /^(\d+\-\d\d\-\d\d\s\d\d\:\d\d\:\d\d\,\d+\:\sUpdate\sip\sof\sdevice\s([^\s]+)\sfrom\s([^\s]+)\sto\s(.*))/ {
      grok{
        patterns_dir => "/etc/logstash/custom_patterns"
        match => {
          message => "%{ssUpdateIpLog}"
        }
      }
    }
    else if [message] =~ /^(\d+\-\d\d\-\d\d\s\d\d\:\d\d\:\d\d\,\d+\:\sLogstash\sHealth=\"([^\"]+)\".*)/ {
      grok{
        patterns_dir => "/etc/logstash/custom_patterns"
        match => {
          message => "%{ssLogstashHealthLog}"
        }
      }
    }
    else if [message] =~ /^(\d+\-\d\d\-\d\d\s\d\d\:\d\d\:\d\d\,\d+\:\sBro\sHealth\s=\s\"([^\"]+)\".*)/ {
      grok{
        patterns_dir => "/etc/logstash/custom_patterns"
        match => {
          message => "%{ssBroHealthLog}"
        }
      }
    }
    else if [message] =~ /^(\d+\-\d\d\-\d\d\s\d\d\:\d\d\:\d\d\,\d+\:\sDisk\sPercentage\sAvailable\:\s(\d+).*)/ {
      grok{
        patterns_dir => "/etc/logstash/custom_patterns"
        match => {
          message => "%{ssDiskUsageLog}"
        }
      }
    }
    else if [message] =~ /^(\d+\-\d\d\-\d\d\s\d\d\:\d\d\:\d\d\,\d+\:\sMemory Available\s=\s\"(\d+)\",\sMemory\sConsumed\s\=\s\"(\d+)\"\,\sPercent\sUsed\s\=\s\"(\d+)\".*)/ {
      grok{
        patterns_dir => "/etc/logstash/custom_patterns"
        match => {
          message => "%{ssMemUsageLog}"
        }
      }
    }
  }
  
  geoip { 
    source => "orig_h"
    target => "geoip_src"
  }
  geoip {
    source => "resp_h"
    target => "geoip_dst"
  }
  translate { 
    field => "orig_h"
    destination => "tor_IP"
    dictionary_path => '/etc/logstash/translate/torIP.yaml'
  }
  translate { 
    field => "resp_h"
    destination => "tor_IP"
    dictionary_path => '/etc/logstash/translate/torIP.yaml'
  }  
  translate { 
    field => "orig_h"
    destination => "malicious_IP"
    dictionary_path => '/etc/logstash/translate/maliciousIP.yaml'
  }
  translate { 
    field => "resp_h"
    destination => "malicious_IP"
    dictionary_path => '/etc/logstash/translate/maliciousIP.yaml'
  }  
  date {
    match => [ "ts", "UNIX" ]
  }
}

output {
  #stdout { 
  #  codec => rubydebug 
  #}

email_block

  elasticsearch { 
    hosts => localhost 
    ssl => true
    ssl_certificate_verification => false
  } 
}
